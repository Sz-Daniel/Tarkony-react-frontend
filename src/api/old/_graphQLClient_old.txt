/* Old versions */
export async function fetchShortItems() {
    const response = await gqlClient.post('', { query: shortItemsListQuery.query })
    if (response.data.errors) {
        throw new Error(JSON.stringify(response.data.errors));
    }
    return response.data
}

export async function fetchCategoryList() {
    const response = await gqlClient.post('', { query: categoryListQuery.query })
    if (response.data.errors) {
        throw new Error(JSON.stringify(response.data.errors));
    }
    return response.data
}

export async function fetchTest() {
    const response = await gqlClient.post('', { query: testIdNameQuery })
    if (response.data.errors) {
        throw new Error(JSON.stringify(response.data.errors));
    }
    return response.data
}

//Create a controll function for calling with POST
//calls queries that contains all already generated fragments
export async function fetchGraphQL<T>(queryKey: GraphqlQueriesType): Promise<T> {
    const query = queries[queryKey]
    const response = await gqlClient.post('', { query })
    if (response.data.errors) {
        throw new Error(JSON.stringify(response.data.errors));
    }
    return response.data
}
